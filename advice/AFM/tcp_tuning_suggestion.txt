For best performance on high latency networks, tune the TCP send/receive buffers according 
to the latency (round-trip time) on your network. You can calculate the buffer size that is 
needed to get full throughput by dividing the throughput goal by the round-trip time in 
seconds.

Following Example shows a sample configuration for a round-trip time of 100 ms (0.1 seconds) with 
a throughput goal of 10 Gbps (1200 MBps), 1200 MBps * 0.1sec = 120 MB buffer size.

OS/Linux tuning for AFM
sysctl -w net.ipv4.tcp_rmem= *** according to your network latencies
sysctl -w net.ipv4.tcp_wmem= *** according to your network latencies
sysctl -w net.ipv4.tcp_mem= *** accord...
sysctl -w net.core.rmem_max=12194304*
sysctl -w net.core.wmem_max=12194304*
sysctl -w net.core.rmem_default=12194304*
sysctl -w net.core.wmem_default=12194304*
sysctl -w net.core.optmem_max=12194304*
# The following adjustments should set, regardless of a given LAN or WAN latency
sysctl -w net.core.netdev_max_backlog=50000
sysctl -w net.ipv4.tcp_no_metrics_save=1
sysctl -w net.ipv4.tcp_timestamps=0
sysctl -w net.ipv4.tcp_sack=1
sysctl -w vm.min_free_kbytes= [minimum 5-6 %]RealMem

A good tuning summary is documented in the Advanced Administration Guide at this web 
page:
http://www-01.ibm.com/support/knowledgecenter/SSFKCN/gpfs_welcome.html
and also at the following website:
http://www-01.ibm.com/support/knowledgecenter/SSFKCN/gpfs4104/com.ibm.cluster.gpfs
.v4r104.gpfs200.doc/bl1adv_afmtuning.htm
 