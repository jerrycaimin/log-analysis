[How to enable properly]

Enable GPFS to write to a new trace file if current is full.
mmchconfig tracedevCycleOnWrap=yes -i   (default is no, you change it back to 'no' after the test. Will take effect immediately with -i option)

Using blocking mode for trace, and each trace file is 1GB.
mmtracectl --start --trace-file-size=1G -tracedev-write-mode=blocking -N <node_list>



mmtracectl --stop -N all
mmtracectl --off



[How to analysis]
trsum.awk


mmtracerpt:
mmtracerpt trace_file > trace_file.mmtracerpt

Slow sample:
SumIO: time 14 IO count 36     30.007797136 MB/sec  disk sectors 61456
SumIO: time 15 IO count 49     31.231429322 MB/sec  disk sectors 63962
SumIO: time 16 IO count 31     25.006823134 MB/sec  disk sectors 51214
SumIO: time 17 IO count 38     32.008284393 MB/sec  disk sectors 65553
SumIO: time 18 IO count 46     37.010234957 MB/sec  disk sectors 75797
SumIO: time 19 IO count 40     33.008772162 MB/sec  disk sectors 67602
SumIO: time 20 IO count 48     31.230941041 MB/sec  disk sectors 63961

Normal sample:
SumIO: time 8 IO count 88     703.999639552 MB/sec  disk sectors 1441792
SumIO: time 9 IO count 81     647.999668224 MB/sec  disk sectors 1327104
SumIO: time 10 IO count 119     951.999512576 MB/sec  disk sectors 1949696
SumIO: time 11 IO count 99     791.999594496 MB/sec  disk sectors 1622016
SumIO: time 12 IO count 167     1335.999315968 MB/sec  disk sectors 2736128
SumIO: time 13 IO count 48     383.999803392 MB/sec  disk sectors 786432
SumIO: time 14 IO count 47     375.999807488 MB/sec  disk sectors 770048

[Method]
1. Find in client write/read message:
example:
  96.354742 111021 TRACE_TS: tscSend: service 00100001 msg 'nsdMsgWriteExt' n_dest 1 data_len 104 msg_id 931061 msg 0x7F807002D200 mr 0x7F807002D020
  96.523667 111291 TRACE_TS: service_message: enter: msg 'reply', msg_id 931061 seq 10364 ackseq 10411, from <c1n6> 10.1.0.230, active 0

0.17s for 1 write, too slow. Check on 10.1.0.230

Notice 
Trace begins: Thu Jan 18 14:15:46 2018

date --date="Thu Jan 18 14:15:46 2018 23.123 seconds"
bash-4.1$ date -d "Thu Jan 18 14:15:46 2018" +%s
1516302946
bash-4.1$ echo $[1516302946+96]
1516303042
bash-4.1$ date -d @1516303042
Thu Jan 18 14:17:22 EST 2018

2. Goto server node and find the trace in time "Thu Jan 18 14:17:22 EST 2018"
39.368965  33184 TRACE_TS: tscHandleMsgDirectly: service 00100001, msg 'nsdMsgWriteExt', msg_id 931061, len 104, from <c0n152> 10.1.33.113
39.537609  30079 TRACE_TS: tscSendReply: service 00100001, msg 'nsdMsgWriteExt', msg_id 931061, replyLen 0

Grep all the content between timeslot and analysis it.

3. Find this
  39.368973  33184 TRACE_MUTEX: Signaling fast condvar for signal 0x3FFB30000F80 NSDQFastCondvar
  39.368976  33184 TRACE_NSD: queueMsgReadWriteFast: exit: err 306
  
 E_DELAYED_REPLY =            306, /* Reply will be sent later */

 

[Different between mmtrace and mmtracectl]
1. mmtrace on local node while mmtracectl on all nodes by mmdsh
2. mmtracectl would call mmchconfig that customer doesn't like so some customer prefer mmtrace.

[linux trace set nowrap]
1. mmchconfig tracedevCycleOnWrap=yes -i
# blocking not override
2. mmtracectl --set --trace="util 6" --tracedev-write-mode=blocking --trace-file-size=1G --trace-recycle=global -N 3
--trace-file-size is equal to nowrap file size
3. "mmtrace start" if mmtracectl --start change the tracedevCycleOnWrap to no back again.
4. monitor the /tmp/mmfs:

sample on single node:
[root@gssio1 ~]# mmtracectl --set --tracedev-write-mode=blocking --trace-file-size=100M --trace-recycle=global -N gssio1-hs
[root@gssio1 ~]# mmchconfig tracedevCycleOnWrap=yes -i
[root@gssio1 ~]# mmtrace start
[root@gssio1 ~]# for i in `seq 1 30`; do /usr/lpp/mmfs/samples/perf/gpfsperf create seq -n 1G -r 4k /gpfs/gpfs0/perftest$i.out4; done | grep "Avg Latency";mmfsadm dump all > dumpall.gssio1.default4k

watch /tmp/mmfs:
Every 2.0s: ls -lth /tmp/mmfs/                                                                                                                                                                                        Sat Aug 10 00:40:15 2019

total 3.0G
-r--r----- 1 root root  38M Aug 10 00:40 lxtrace.trc.gssio1-hs.cpu0
-r--r----- 1 root root 100M Aug 10 00:40 lxtrace.trc.gssio1-hs.nowrap.3.cpu0
-r--r----- 1 root root 100M Aug 10 00:39 lxtrace.trc.gssio1-hs.nowrap.2.cpu0
-r--r----- 1 root root 100M Aug 10 00:39 lxtrace.trc.gssio1-hs.nowrap.1.cpu0
-r--r----- 1 root root 100M Aug 10 00:38 lxtrace.trc.gssio1-hs.nowrap.0.cpu0
after stopped:

[root@gssio1 ~]# mmtrace

It will gzip all the lxtrace*nowrap* to trcfile as well as the latest trcrpt:
[root@gssio1 ~]# mmtrace
mmtrace: move /tmp/mmfs/lxtrace.trc.gssio1-hs.nowrap.0.cpu0 /tmp/mmfs/trcfile.2019-08-10_00.40.41.142606.gssio1-hs.nowrap.0.cpu0
mmtrace: move /tmp/mmfs/lxtrace.trc.gssio1-hs.nowrap.1.cpu0 /tmp/mmfs/trcfile.2019-08-10_00.40.41.142606.gssio1-hs.nowrap.1.cpu0
mmtrace: move /tmp/mmfs/lxtrace.trc.gssio1-hs.nowrap.2.cpu0 /tmp/mmfs/trcfile.2019-08-10_00.40.41.142606.gssio1-hs.nowrap.2.cpu0
mmtrace: move /tmp/mmfs/lxtrace.trc.gssio1-hs.nowrap.3.cpu0 /tmp/mmfs/trcfile.2019-08-10_00.40.41.142606.gssio1-hs.nowrap.3.cpu0
mmtrace: move /tmp/mmfs/lxtrace.trc.gssio1-hs.nowrap.4.cpu0 /tmp/mmfs/trcfile.2019-08-10_00.40.41.142606.gssio1-hs.nowrap.4.cpu0
mmtrace: move /tmp/mmfs/lxtrace.trc.gssio1-hs.recycle.cpu0 /tmp/mmfs/trcfile.2019-08-10_00.40.41.142606.gssio1-hs.recycle.cpu0
mmtrace: formatting /tmp/mmfs/trcfile.2019-08-10_00.40.41.142606.gssio1-hs.recycle to /tmp/mmfs/trcrpt.2019-08-10_00.40.41.142606.gssio1-hs.gz

watch again:
Every 2.0s: ls -lth /tmp/mmfs/                                                                                                                                                                                        Sat Aug 10 00:42:22 2019

total 2.9G
-r--r----- 1 root root 164K Aug 10 00:42 lxtrace.trc.gssio1-hs.cpu0
-r--r----- 1 root root 3.9M Aug 10 00:41 trcrpt.2019-08-10_00.40.41.142606.gssio1-hs.gz
-r--r----- 1 root root  85M Aug 10 00:41 trcfile.2019-08-10_00.40.41.142606.gssio1-hs.nowrap.4.cpu0.gz
-r--r----- 1 root root  85M Aug 10 00:41 trcfile.2019-08-10_00.40.41.142606.gssio1-hs.nowrap.3.cpu0.gz
-r--r----- 1 root root  85M Aug 10 00:41 trcfile.2019-08-10_00.40.41.142606.gssio1-hs.nowrap.2.cpu0.gz
-r--r----- 1 root root  85M Aug 10 00:40 trcfile.2019-08-10_00.40.41.142606.gssio1-hs.nowrap.1.cpu0.gz
-r--r----- 1 root root  85M Aug 10 00:40 trcfile.2019-08-10_00.40.41.142606.gssio1-hs.nowrap.0.cpu0.gz

If dev wants to check nowrap, trcfile is unreadable, need to gzip -d them and run "mmtrace format=all" to generate nowrap trcrpt files:

[root@gssio1 mmfs]# ll
total 192704
-rw-r--r-- 1 root root        0 Aug 10 00:44 lxtrace.trcerr.gssio1-hs
-r--r----- 1 root root        0 Aug 10 00:46 lxtrace.trc.gssio1-hs.cpu0
-r--r----- 1 root root 88599831 Aug 10 00:46 trcfile.2019-08-10_00.46.08.147401.gssio1-hs.nowrap.0.cpu0.gz
-r--r----- 1 root root 88601784 Aug 10 00:46 trcfile.2019-08-10_00.46.08.147401.gssio1-hs.nowrap.1.cpu0.gz
-r--r----- 1 root root 20121092 Aug 10 00:46 trcrpt.2019-08-10_00.46.08.147401.gssio1-hs.gz
[root@gssio1 mmfs]# gzip -d trcfile*.gz
[root@gssio1 mmfs]# ll
total 224408
-rw-r--r-- 1 root root         0 Aug 10 00:44 lxtrace.trcerr.gssio1-hs
-r--r----- 1 root root         0 Aug 10 00:46 lxtrace.trc.gssio1-hs.cpu0
-r--r----- 1 root root 104814780 Aug 10 00:46 trcfile.2019-08-10_00.46.08.147401.gssio1-hs.nowrap.0.cpu0
-r--r----- 1 root root 104851986 Aug 10 00:46 trcfile.2019-08-10_00.46.08.147401.gssio1-hs.nowrap.1.cpu0
-r--r----- 1 root root  20121092 Aug 10 00:46 trcrpt.2019-08-10_00.46.08.147401.gssio1-hs.gz

# send trcrpt*nowarp* to dev for investigation
-r--r----- 1 root root   82028932 Aug 10 00:48 trcrpt.2019-08-10_00.46.08.147401.gssio1-hs.nowrap.0.gz
-r--r----- 1 root root   82184438 Aug 10 00:48 trcrpt.2019-08-10_00.46.08.147401.gssio1-hs.nowrap.1.gz


Total steps:
0. enlarge process stack size to 10240: "ulimit -s 10240"
1. mmchconfig tracedevCycleOnWrap=yes -i, dev mentioned set this would create a new 1G file when trace file size reaches to 1G.
2. mmtracectl --set --trace="util 6" --tracedev-write-mode=blocking --trace-file-size=1G --trace-recycle=global -N <node name on which you run mmrestorefs cmd>
3. mmtracectl --start
4. rerun the mmrestorefs, wait until you see:
"0 operations have been added to list" blocked.
5. run "mmtrace" to recycle and format the trace data first time.
6. wait some time, run "mmtrace" again to recycle second time.
7. run mmtracectl --stop







